/*
Copyright (c) 2020 Daybrush
name: overlap-area
license: MIT
author: Daybrush
repository: git+https://github.com/daybrush/overlap-area.git
version: 0.1.0
*/
!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(n=n||self).OverlapArea=t()}(this,function(){"use strict";function m(n,t,r){void 0===r&&(r=-1);for(var u=n.length,e=0;e<u;++e)if(t(n[e],e,n))return e;return r}function l(n,t){var r=t[0]-n[0],n=t[1]-n[1],r=Math.atan2(n,r);return 0<=r?r:r+2*Math.PI}function s(n){return[0,1].map(function(t){return function(n){for(var t=n.length,r=0,u=t-1;0<=u;--u)r+=n[u];return t?r/t:0}(n.map(function(n){return n[t]}))})}function M(n,t){return Math.sqrt(Math.pow((t?t[0]:0)-n[0],2)+Math.pow((t?t[1]:0)-n[1],2))}function r(r){return Math.abs(function(n){for(var t=0,r=n.length-1;0<=r;--r)t+=n[r];return t}(r.map(function(n,t){t=r[t+1]||r[0];return n[0]*t[1]-t[0]*n[1]})))/2}function v(n,t,r){var u=n[0],e=n[1],a=t.map(function(n){return n[0]}),i=t.map(function(n){return n[1]}),o=Math.min.apply(Math,a),n=Math.max.apply(Math,a),a=Math.min.apply(Math,i),i=Math.max.apply(Math,i),f=[[o,e],[n,e]],p=[[u,a],[u,i]],c=y(f[0],f[1]),h=y(p[0],p[1]),t=x(t),l=[],s=[];return t.forEach(function(n){var t=y(n[0],n[1]),r=d(g(c,t),[f,n]),n=d(g(h,t),[p,n]);l.push.apply(l,r),s.push.apply(s,n),t[0]||l.push.apply(l,r),t[1]||s.push.apply(s,n)}),!r&&(-1<m(l,function(n){return n[0]===u})||-1<m(s,function(n){return n[1]===e}))||!!(l.filter(function(n){return n[0]>u}).length%2&&s.filter(function(n){return n[1]>e}).length%2)}function y(n,t){var r=n[0],u=n[1],n=t[0],t=t[1];if(r===n&&u===t)return[0,0,0];if(r===n)return[1,0,-r];if(u===t)return[0,1,-u];t=(n-r)/(u-t);return[1,t,-r-t*u]}function g(n,t){var r=n[0],u=n[1],e=n[2],a=t[0],i=t[1],n=t[2];if(0===r&&0===a){t=-e/u;return t!=-n/i?[]:[[-1/0,t],[1/0,t]]}if(0!==u||0!==i)return 0!==r?0!==a?0!==u?0!==i?[[o=(u*n-i*e)/(i*r-u*a),f=-(r*o+e)/u]]:[[o=-n/a,f=-(r*o+e)/u]]:[[o=-e/r,f=-(a*o+n)/i]]:[[o=-(u*(f=-n/i)+e)/r,f]]:[[o=-(i*(f=-e/u)+n)/a,f]];var o,f,r=-e/r;return r!=-n/a?[]:[[r,-1/0],[r,1/0]]}function d(n,t){var r=t.map(function(t){return[0,1].map(function(n){return[Math.min(t[0][n],t[1][n]),Math.max(t[0][n],t[1][n])]})});if(2===n.length){var u=n[0],e=u[0],t=u[1];if(e===n[1][0]){var u=Math.max.apply(Math,r.map(function(n){return n[1][0]})),a=Math.min.apply(Math,r.map(function(n){return n[1][1]}));return a<u?[]:[[e,u],[e,a]]}if(t===n[1][1]){e=Math.max.apply(Math,r.map(function(n){return n[0][0]})),a=Math.min.apply(Math,r.map(function(n){return n[0][1]}));return a<e?[]:[[e,t],[a,t]]}}return n.filter(function(t){return r.every(function(n){return n[0][0]<=t[0]&&t[0]<=n[0][1]&&n[1][0]<=t[1]&&t[1]<=n[1][1]})})}function x(r){return function(){for(var n=0,t=0,r=arguments.length;t<r;t++)n+=arguments[t].length;for(var u=Array(n),e=0,t=0;t<r;t++)for(var a=arguments[t],i=0,o=a.length;i<o;i++,e++)u[e]=a[i];return u}(r.slice(1),[r[0]]).map(function(n,t){return[r[t],n]})}function u(t,a){var n,r,u,i=x(t),o=x(a),e=i.map(function(n){return y(n[0],n[1])}),f=o.map(function(n){return y(n[0],n[1])}),p=[],c=(r=s(n=a),u=l(r,n[0]),n=l(r,n[1]),u<n&&n-u<Math.PI||n<u&&n-u<-Math.PI?1:-1);o.forEach(function(n){v(n[1],t)&&p[0<c?"push":"unshift"](n[1])}),e.forEach(function(r,n){var u=i[n],e=[];f.forEach(function(n,t){t=d(g(r,n),[u,o[t]]);e.push.apply(e,t)}),e.sort(function(n,t){return M(u[0],n)-M(u[0],t)}),p.push.apply(p,e),v(u[1],a)&&p.push(u[1])});var h={};return p.filter(function(n){n=n[0]+"x"+n[1];return!h[n]&&(h[n]=!0)})}return{__proto__:null,getAreaSize:r,isInside:v,getLinearConstants:y,getIntersectionPointsByConstants:g,getIntersectionPoints:function(n,t,r){var u=g(y(n[0],n[1]),y(t[0],t[1]));return r?d(u,[n,t]):u},getPointsOnLines:d,convertLines:x,getOverlapPoints:u,getOverlapSize:function(n,t){return r(u(n,t))}}});
//# sourceMappingURL=overlap-area.min.js.map
